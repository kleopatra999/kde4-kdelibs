Index: kate/syntax/data/latex.xml
===================================================================
--- kate/syntax/data/latex.xml	(.../tags/KDE/4.5.1/kdelibs)	(wersja 1170564)
+++ kate/syntax/data/latex.xml	(.../branches/KDE/4.5/kdelibs)	(wersja 1170564)
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <!DOCTYPE language SYSTEM "language.dtd">
-<language name="LaTeX" version="1.41" section="Markup" kateversion="2.3" priority="10" extensions="*.tex;*.ltx;*.dtx;*.sty;*.cls;*.bbx;*.cbx;*.lbx;" mimetype="text/x-tex" casesensitive="1" author="Jeroen Wijnhout (Jeroen.Wijnhout@kdemail.net)+Holger Danielsson (holger.danielsson@versanet.de)+Michel Ludwig (michel.ludwig@kdemail.net)+Thomas Braun (thomas.braun@virtuell-zuhause.de)" license="LGPL" >
+<language name="LaTeX" version="1.42" section="Markup" kateversion="2.3" priority="10" extensions="*.tex;*.ltx;*.dtx;*.sty;*.cls;*.bbx;*.cbx;*.lbx;" mimetype="text/x-tex" casesensitive="1" author="Jeroen Wijnhout (Jeroen.Wijnhout@kdemail.net)+Holger Danielsson (holger.danielsson@versanet.de)+Michel Ludwig (michel.ludwig@kdemail.net)+Thomas Braun (thomas.braun@virtuell-zuhause.de)" license="LGPL" >
   <highlighting>
     <contexts>
       <!-- Normal text -->
@@ -281,9 +281,8 @@
 
       <!-- parse math environment -->
       <context name="MathModeEnv" attribute="Math" lineEndContext="#stay">
-        <RegExpr String="\\end(?=\s*\{(equation|displaymath|eqnarray|subeqnarray|math|multline|gather|align|flalign|alignat|xalignat|xxalignat)\*?\})" attribute="Structure" context="MathFindEnd"/>
-        <RegExpr String="\\begin(?=[^a-zA-Z])" attribute="Keyword Mathmode" context="#stay" beginRegion="block" />
-        <RegExpr String="\\end(?=[^a-zA-Z])" attribute="Keyword Mathmode" context="#stay" endRegion="block" />
+	<RegExpr String="\\begin(?=[^a-zA-Z])" attribute="Structure" context="FindBeginEnvironment" beginRegion="block"/>
+	<RegExpr String="\\end(?=[^a-zA-Z])" attribute="Structure" context="MathFindEnd"/>
         <StringDetect String="\(" attribute="Error" context="#stay" />
         <StringDetect String="\[" attribute="Error" context="#stay" />
         <StringDetect String="\)" attribute="Error" context="#stay" />
@@ -371,8 +370,8 @@
       <!-- math mode common -->
       <context name="MathModeCommon" attribute="Math" lineEndContext="#stay">
         <RegExpr String="\\(begin|end)\s*\{(equation|displaymath|eqnarray|subeqnarray|math|multline|gather|align|flalign|alignat|xalignat|xxalignat)\*?\}" attribute="Error" context="#stay"/>
-        <RegExpr String="\\begin(?=[^a-zA-Z])" attribute="Keyword Mathmode" context="#stay" beginRegion="block" />
-        <RegExpr String="\\end(?=[^a-zA-Z])" attribute="Keyword Mathmode" context="#stay" endRegion="block" />
+	<RegExpr String="\\begin(?=[^a-zA-Z])" attribute="Keyword Mathmode" context="#stay" beginRegion="block" />
+	<RegExpr String="\\end(?=[^a-zA-Z])" attribute="Keyword Mathmode" context="#stay" endRegion="block" />
         <RegExpr String="\\(text|intertext|mbox)\s*(?=\{)" attribute="Keyword Mathmode" context="MathModeText" />
         <DetectChar char="\" attribute="Keyword Mathmode" context="MathContrSeq"/>
         <DetectChar char="%" attribute="Comment" context="Comment"/>
@@ -443,7 +442,7 @@
       <itemData name="Structure Keyword" defStyleNum="dsNormal" color="#800000" selColor="#60FFFF" bold="1" italic="0" spellChecking="false"/>
       <itemData name="Structure Math" defStyleNum="dsNormal" color="#00A000" selColor="#FF40FF"  bold="1" italic="0"/>
       <itemData name="Structure Keyword Mathmode" defStyleNum="dsNormal" color="#606000" selColor="#FFD0FF" bold="1" italic="0" spellChecking="false"/>
-     </itemDatas>
+    </itemDatas>
   </highlighting>
 
   <general>
Index: kate/spellcheck/ontheflycheck.cpp
===================================================================
--- kate/spellcheck/ontheflycheck.cpp	(.../tags/KDE/4.5.1/kdelibs)	(wersja 1170564)
+++ kate/spellcheck/ontheflycheck.cpp	(.../branches/KDE/4.5/kdelibs)	(wersja 1170564)
@@ -60,6 +60,10 @@
           this, SLOT(updateConfig()));
   connect(document, SIGNAL(respellCheckBlock(KateDocument*, int, int)),
           this, SLOT(handleRespellCheckBlock(KateDocument*, int, int)));
+
+  // load the settings for the speller
+  updateConfig();
+
   foreach(KTextEditor::View* view, document->views()) {
     addView(document, view);
   }
@@ -407,6 +411,7 @@
             this,
             SLOT(misspelling(const QString&,int)));
     connect(m_backgroundChecker, SIGNAL(done()), this, SLOT(spellCheckDone()));
+    m_backgroundChecker->restore(KGlobal::config().data());
   }
   m_backgroundChecker->setSpeller(m_speller);
   m_backgroundChecker->setText(text); // don't call 'start()' after this!
@@ -665,6 +670,9 @@
 {
   ON_THE_FLY_DEBUG;
   m_speller.restore(KGlobal::config().data());
+  if(m_backgroundChecker) {
+    m_backgroundChecker->restore(KGlobal::config().data());
+  }
 }
 
 void KateOnTheFlyChecker::refreshSpellCheck(const KTextEditor::Range &range)
Index: kate/spellcheck/spellcheckdialog.cpp
===================================================================
--- kate/spellcheck/spellcheckdialog.cpp	(.../tags/KDE/4.5.1/kdelibs)	(wersja 1170564)
+++ kate/spellcheck/spellcheckdialog.cpp	(.../branches/KDE/4.5/kdelibs)	(wersja 1170564)
@@ -110,15 +110,13 @@
   {
     m_speller = new Sonnet::Speller();
   }
-  else
-  {
-    m_speller->restore(KGlobal::config().data());
-  }
+  m_speller->restore(KGlobal::config().data());
 
   if ( !m_backgroundChecker )
   {
     m_backgroundChecker = new Sonnet::BackgroundChecker(*m_speller);
   }
+  m_backgroundChecker->restore(KGlobal::config().data());
 
   if ( !m_sonnetDialog )
   {
Index: nepomuk/types/entitymanager.cpp
===================================================================
--- nepomuk/types/entitymanager.cpp	(.../tags/KDE/4.5.1/kdelibs)	(wersja 1170564)
+++ nepomuk/types/entitymanager.cpp	(.../branches/KDE/4.5/kdelibs)	(wersja 1170564)
@@ -1,5 +1,5 @@
 /* This file is part of the Nepomuk-KDE libraries
-    Copyright (c) 2007 Sebastian Trueg <trueg@kde.org>
+    Copyright (c) 2007-2010 Sebastian Trueg <trueg@kde.org>
 
     This library is free software; you can redistribute it and/or
     modify it under the terms of the GNU Library General Public
@@ -33,94 +33,50 @@
 }
 
 
-Nepomuk::Types::EntityPrivate* Nepomuk::Types::EntityManager::findEntity( const QUrl& uri ) const
+QExplicitlySharedDataPointer<Nepomuk::Types::ClassPrivate> Nepomuk::Types::EntityManager::getClass( const QUrl& uri )
 {
-    if ( ClassPrivate* cp = findClass( uri ) ) {
-        return cp;
-    }
-    else if ( PropertyPrivate* pp = findProperty( uri ) ) {
-        return pp;
-    }
-    else if ( OntologyPrivate* op = findOntology( uri ) ) {
-        return op;
-    }
-    else {
-        return 0;
-    }
-}
+    QMutexLocker lock( &m_mutex );
 
-
-Nepomuk::Types::ClassPrivate* Nepomuk::Types::EntityManager::findClass( const QUrl& uri ) const
-{
     QHash<QUrl, QExplicitlySharedDataPointer<ClassPrivate> >::const_iterator it = m_classMap.constFind( uri );
-    if ( it != m_classMap.end() ) {
-        return it.value().data();
+    if ( it != m_classMap.constEnd() ) {
+        return it.value();
     }
-    return 0;
-}
-
-
-Nepomuk::Types::PropertyPrivate* Nepomuk::Types::EntityManager::findProperty( const QUrl& uri ) const
-{
-    QHash<QUrl, QExplicitlySharedDataPointer<PropertyPrivate> >::const_iterator it = m_propertyMap.constFind( uri );
-    if ( it != m_propertyMap.end() ) {
-        return it.value().data();
-    }
-    return 0;
-}
-
-
-Nepomuk::Types::OntologyPrivate* Nepomuk::Types::EntityManager::findOntology( const QUrl& uri ) const
-{
-    QHash<QUrl, QExplicitlySharedDataPointer<OntologyPrivate> >::const_iterator it = m_ontologyMap.constFind( uri );
-    if ( it != m_ontologyMap.end() ) {
-        return it.value().data();
-    }
-    return 0;
-}
-
-
-Nepomuk::Types::ClassPrivate* Nepomuk::Types::EntityManager::getClass( const QUrl& uri )
-{
-    QMutexLocker lock( &m_mutex );
-
-    if ( ClassPrivate* cp = findClass( uri ) ) {
-        return cp;
-    }
     else {
         QExplicitlySharedDataPointer<ClassPrivate> scp( new ClassPrivate( uri ) );
         m_classMap.insert( uri, scp );
-        return scp.data();
+        return scp;
     }
 }
 
 
-Nepomuk::Types::PropertyPrivate* Nepomuk::Types::EntityManager::getProperty( const QUrl& uri )
+QExplicitlySharedDataPointer<Nepomuk::Types::PropertyPrivate> Nepomuk::Types::EntityManager::getProperty( const QUrl& uri )
 {
     QMutexLocker lock( &m_mutex );
 
-    if ( PropertyPrivate* pp = findProperty( uri ) ) {
-        return pp;
+    QHash<QUrl, QExplicitlySharedDataPointer<PropertyPrivate> >::const_iterator it = m_propertyMap.constFind( uri );
+    if ( it != m_propertyMap.constEnd() ) {
+        return it.value();
     }
     else {
         QExplicitlySharedDataPointer<PropertyPrivate> cp( new PropertyPrivate( uri ) );
         m_propertyMap.insert( uri, cp );
-        return cp.data();
+        return cp;
     }
 }
 
 
-Nepomuk::Types::OntologyPrivate* Nepomuk::Types::EntityManager::getOntology( const QUrl& uri )
+QExplicitlySharedDataPointer<Nepomuk::Types::OntologyPrivate> Nepomuk::Types::EntityManager::getOntology( const QUrl& uri )
 {
     QMutexLocker lock( &m_mutex );
 
-    if ( OntologyPrivate* op = findOntology( uri ) ) {
-        return op;
+    QHash<QUrl, QExplicitlySharedDataPointer<OntologyPrivate> >::const_iterator it = m_ontologyMap.constFind( uri );
+    if ( it != m_ontologyMap.constEnd() ) {
+        return it.value();
     }
     else {
         QExplicitlySharedDataPointer<OntologyPrivate> cp( new OntologyPrivate( uri ) );
         m_ontologyMap.insert( uri, cp );
-        return cp.data();
+        return cp;
     }
 }
 
Index: nepomuk/types/entitymanager.h
===================================================================
--- nepomuk/types/entitymanager.h	(.../tags/KDE/4.5.1/kdelibs)	(wersja 1170564)
+++ nepomuk/types/entitymanager.h	(.../branches/KDE/4.5/kdelibs)	(wersja 1170564)
@@ -1,5 +1,5 @@
 /* This file is part of the Nepomuk-KDE libraries
-   Copyright (c) 2007 Sebastian Trueg <trueg@kde.org>
+   Copyright (c) 2007-2010 Sebastian Trueg <trueg@kde.org>
 
    This library is free software; you can redistribute it and/or
    modify it under the terms of the GNU Library General Public
@@ -45,18 +45,13 @@
         public:
             EntityManager();
 
-            ClassPrivate* getClass( const QUrl& uri );
-            PropertyPrivate* getProperty( const QUrl& uri );
-            OntologyPrivate* getOntology( const QUrl& uri );
+            QExplicitlySharedDataPointer<ClassPrivate> getClass( const QUrl& uri );
+            QExplicitlySharedDataPointer<PropertyPrivate> getProperty( const QUrl& uri );
+            QExplicitlySharedDataPointer<OntologyPrivate> getOntology( const QUrl& uri );
 
             static EntityManager* self();
 
         private:
-            EntityPrivate* findEntity( const QUrl& uri ) const;
-            ClassPrivate* findClass( const QUrl& uri ) const;
-            PropertyPrivate* findProperty( const QUrl& uri ) const;
-            OntologyPrivate* findOntology( const QUrl& uri ) const;
-
             QHash<QUrl, QExplicitlySharedDataPointer<ClassPrivate> > m_classMap;
             QHash<QUrl, QExplicitlySharedDataPointer<PropertyPrivate> > m_propertyMap;
             QHash<QUrl, QExplicitlySharedDataPointer<OntologyPrivate> > m_ontologyMap;
Index: nepomuk/types/entity.cpp
===================================================================
--- nepomuk/types/entity.cpp	(.../tags/KDE/4.5.1/kdelibs)	(wersja 1170564)
+++ nepomuk/types/entity.cpp	(.../branches/KDE/4.5/kdelibs)	(wersja 1170564)
@@ -275,7 +275,8 @@
 
 void Nepomuk::Types::Entity::reset( bool recursive )
 {
-    d->reset( recursive );
+    if( d )
+        d->reset( recursive );
 }
 
 
@@ -291,7 +292,10 @@
 {
     // since we use one instace cache we can improve comparation operations
     // intensly by not comparing URLs but pointers.
-    return( d.constData()->uri == other );
+    if( d )
+        return( d->uri == other );
+    else
+        return !other.isValid();
 }
 
 
@@ -307,7 +311,10 @@
 {
     // since we use one instace cache we can improve comparation operations
     // intensly by not comparing URLs but pointers.
-    return( d.constData()->uri != other );
+    if( d )
+        return( d->uri != other );
+    else
+        return other.isValid();
 }
 
 
Index: kio/kio/kurifilter.h
===================================================================
--- kio/kio/kurifilter.h	(.../tags/KDE/4.5.1/kdelibs)	(wersja 1170564)
+++ kio/kio/kurifilter.h	(.../branches/KDE/4.5/kdelibs)	(wersja 1170564)
@@ -247,14 +247,22 @@
     /**
      * Returns a list of the names of the preferred search providers.
      *
-     * This function returns the list of favorite or preferred providers only
-     * when this data filtered through the default search uri plugin 'kurisearchfilter'.
-     * Otherwise, it returns an empty list.
+     * This function returns the list of providers that are marked as favorite
+     * or preferred by the user whenever the data it contains is filtered by the
+     * 'kuriikwsfilter' search uri filter plugin.
      *
+     * If no prior search providers were marked preferred or no default search
+     * engine was selected, then this function will return an empty list unless
+     * you set alternate default or search providers using the appropriate function.
+     * See @ref setAlternateDefaultSearchProvider and @ref setAlternateSearchProviders.
+     *
      * You can use @ref queryForPreferredServiceProvider to obtain the queries
      * associated with the returned search providers.
      *
      * @see searchProvider
+     * @see alternateSearchProviders
+     * @see alternateDefaultSearchProvider
+     * @see queryForPreferredServiceProvider
      * @since 4.5
      */
     QStringList preferredSearchProviders() const;
@@ -287,8 +295,9 @@
      * Returns the list of alternate search providers.
      *
      * This function returns an empty list if @ref setAlternateSearchProviders
-     * was not called to set alternate search providers to be used in place of
-     * the preferred search providers when they are not available.
+     * was not called to set the alternate search providers to be when no
+     * preferred providers have been chosen by the user through the search
+     * configuration module.
      *
      * @see setAlternatteSearchProviders
      * @see preferredSearchProviders
@@ -299,8 +308,9 @@
     /**
      * Returns the search provider to use when a default provider is not available.
      *
-     * The alternate default search provider is not set by default and this function
-     * returns an empty string.
+     * This function returns an empty string if @ref setAlternateDefaultSearchProvider
+     * was not called to set the default search provider to be used when none has been
+     * chosen by the user through the search configuration module.
      *
      * @see setAlternateDefaultSearchProvider
      * @since 4.5
@@ -362,25 +372,30 @@
     bool setAbsolutePath( const QString& abs_path );
 
     /**
-     * Sets a list of search providers to use in case no default preferred search
+     * Sets a list of search providers to use in case no preferred search
      * providers are available.
      *
-     * The list of preferred search providers set using this function will only be
-     * used if the default and favorite search providers have not yet been configured
-     * through the configuration dialogs. Otherwise, the providers specified by this
+     * The list of preferred search providers set using this function will only
+     * be used if the default and favorite search providers have not yet been
+     * selected by the user. Otherwise, the providers specified through this
      * function will be ignored.
      *
-     * @see alternatteSearchProviders
+     * @see alternateSearchProviders
      * @see preferredSearchProviders
      * @since 4.5
      */
     void setAlternateSearchProviders(const QStringList &providers);
 
     /**
-     * Sets the search provider to use when there no default provider has been
-     * set by though the web shortcuts configuration dialog.
+     * Sets the search provider to use in case no default provider is available.
      *
-     * @see setAlternateDefaultSearchProvider
+     * The default search provider set using this function will only be used if
+     * the default and favorite search providers have not yet been selected by
+     * the user. Otherwise, the default provider specified by through function
+     * will be ignored.
+     *
+     * @see alternateDefaultSearchProvider
+     * @see preferredSearchProviders
      * @since 4.5
      */
     void setAlternateDefaultSearchProvider(const QString &provider);
Index: kio/kio/previewjob.cpp
===================================================================
--- kio/kio/previewjob.cpp	(.../tags/KDE/4.5.1/kdelibs)	(wersja 1170564)
+++ kio/kio/previewjob.cpp	(.../branches/KDE/4.5/kdelibs)	(wersja 1170564)
@@ -22,6 +22,7 @@
 */
 
 #include "previewjob.h"
+#include <kdebug.h>
 
 #include <sys/stat.h>
 #ifdef __FreeBSD__
@@ -361,6 +362,15 @@
             {
                 // For remote items the "IgnoreMaximumSize" plugin property is not respected
                 skipCurrentItem = !d->ignoreMaximumSize && size > d->maximumRemoteSize;
+
+                // Remote directories are not supported, don't try to do a file_copy on them
+                if (!skipCurrentItem) {
+                    // TODO update item.mimeType from the UDS entry, in case it wasn't set initially
+                    KMimeType::Ptr mime = d->currentItem.item.mimeTypePtr();
+                    if (mime && mime->is("inode/directory")) {
+                        skipCurrentItem = true;
+                    }
+                }
             }
             if (skipCurrentItem)
             {
Index: kdecore/sonnet/backgroundchecker.cpp
===================================================================
--- kdecore/sonnet/backgroundchecker.cpp	(.../tags/KDE/4.5.1/kdelibs)	(wersja 1170564)
+++ kdecore/sonnet/backgroundchecker.cpp	(.../branches/KDE/4.5/kdelibs)	(wersja 1170564)
@@ -23,6 +23,7 @@
 #include "loader_p.h"
 #include "backgroundengine_p.h"
 #include "filter_p.h"
+#include "settings_p.h"
 
 #include <kdebug.h>
 
@@ -64,6 +65,13 @@
     delete d;
 }
 
+void BackgroundChecker::restore(KConfig *config)
+{
+    Loader *loader = Loader::openLoader();
+    loader->settings()->restore(config);
+    d->engine->filter()->setSettings(loader->settings());
+}
+
 void BackgroundChecker::setText(const QString &text)
 {
     d->currentText = text;
Index: kdecore/sonnet/backgroundchecker.h
===================================================================
--- kdecore/sonnet/backgroundchecker.h	(.../tags/KDE/4.5.1/kdelibs)	(wersja 1170564)
+++ kdecore/sonnet/backgroundchecker.h	(.../branches/KDE/4.5/kdelibs)	(wersja 1170564)
@@ -76,6 +76,9 @@
         bool checkWord(const QString &word);
         QStringList suggest(const QString &word) const;
         bool addWordToPersonal(const QString &word);
+
+        void restore(KConfig *config);
+
     public Q_SLOTS:
         virtual void start();
         virtual void stop();
Index: plasma/corona.cpp
===================================================================
--- plasma/corona.cpp	(.../tags/KDE/4.5.1/kdelibs)	(wersja 1170564)
+++ plasma/corona.cpp	(.../branches/KDE/4.5/kdelibs)	(wersja 1170564)
@@ -230,6 +230,14 @@
             containment->setFormFactor(Plasma::Planar);
         }
 
+        // if this is a new containment, we need to ensure that there are no stale
+        // configuration data around
+        if (id == 0) {
+            KConfigGroup conf(q->config(), "Containments");
+            conf = KConfigGroup(&conf, QString::number(containment->id()));
+            conf.deleteGroup();
+        }
+
         applet->d->isContainment = true;
         containment->setPos(containment->d->preferredPos(q));
         q->addItem(containment);
@@ -447,7 +455,7 @@
     }
 
     KSharedConfigPtr conf = config();
-    d->importLayout(*conf, conf != config());
+    d->importLayout(*conf, false);
 }
 
 QList<Plasma::Containment *> Corona::importLayout(const KConfigBase &conf)
@@ -489,6 +497,8 @@
         if (mergeConfig) {
             KConfigGroup realConf(q->config(), "Containments");
             realConf = KConfigGroup(&realConf, QString::number(cid));
+            // in case something was there before us
+            realConf.deleteGroup();
             containmentConfig.copyTo(&realConf);
         }
 
Index: plasma/applet.cpp
===================================================================
--- plasma/applet.cpp	(.../tags/KDE/4.5.1/kdelibs)	(wersja 1170564)
+++ plasma/applet.cpp	(.../branches/KDE/4.5/kdelibs)	(wersja 1170564)
@@ -1279,7 +1279,8 @@
         }
     }
 
-    if ((c & Plasma::StartupCompletedConstraint) || (c & Plasma::SizeConstraint && !(c & Plasma::FormFactorConstraint))) {
+    if (!size().isEmpty() &&
+        ((c & Plasma::StartupCompletedConstraint) || (c & Plasma::SizeConstraint && !(c & Plasma::FormFactorConstraint)))) {
         d->sizeForFormFactor[formFactor()] = size();
     }
 
@@ -2654,6 +2655,12 @@
     // but it doesn't actually work anyways =/
     q->setLayoutDirection(qApp->layoutDirection());
 
+    //set a default size before any saved settings are read
+    QSize size(200, 200);
+    q->setBackgroundHints(Applet::DefaultBackground);
+    q->setHasConfigurationInterface(true); //FIXME why not default it to true in the constructor?
+
+
     if (!appletDescription.isValid()) {
         kDebug() << "Check your constructor! "
                  << "You probably want to be passing in a Service::Ptr "
@@ -2661,6 +2668,10 @@
         return;
     }
 
+    size = appletDescription.property("X-Plasma-DefaultSize").toSize();
+    //kDebug() << "size" << size;
+    q->resize(size);
+
     QString api = appletDescription.property("X-Plasma-API").toString();
 
     // we have a scripted plasmoid
@@ -2716,17 +2727,6 @@
         }
     }
 
-    //set a default size before any saved settings are read
-    QSize size = appletDescription.property("X-Plasma-DefaultSize").toSize();
-    if (size.isEmpty()) {
-        size = QSize(200, 200);
-    }
-    //kDebug() << "size" << size;
-    q->resize(size);
-
-    q->setBackgroundHints(Applet::DefaultBackground);
-    q->setHasConfigurationInterface(true); //FIXME why not default it to true in the constructor?
-
     QAction *closeApplet = actions->action("remove");
     if (closeApplet) {
         closeApplet->setText(i18nc("%1 is the name of the applet", "Remove this %1", q->name()));
Index: khtml/khtmlimage.cpp
===================================================================
--- khtml/khtmlimage.cpp	(.../tags/KDE/4.5.1/kdelibs)	(wersja 1170564)
+++ khtml/khtmlimage.cpp	(.../branches/KDE/4.5/kdelibs)	(wersja 1170564)
@@ -93,6 +93,9 @@
     m_ext = new KHTMLImageBrowserExtension( this );
     m_ext->setObjectName( "be" );
 
+    m_sbExt = new KParts::StatusBarExtension( this );
+    m_sbExt->setObjectName( "sbe" );
+
     // Remove unnecessary actions.
     delete actionCollection()->action( "setEncoding" );
     delete actionCollection()->action( "viewDocumentSource" );
@@ -134,6 +137,9 @@
 {
     static const QString &html = KGlobal::staticQString( "<html><body><img src=\"%1\"></body></html>" );
 
+    // Propagate statusbar to our kid part.
+    KParts::StatusBarExtension::childObject( m_khtml )->setStatusBar( m_sbExt->statusBar() );
+
     disposeImage();
 
     setUrl(url);
Index: khtml/khtml_filter.cpp
===================================================================
--- khtml/khtml_filter.cpp	(.../tags/KDE/4.5.1/kdelibs)	(wersja 1170564)
+++ khtml/khtml_filter.cpp	(.../branches/KDE/4.5/kdelibs)	(wersja 1170564)
@@ -84,7 +84,7 @@
             filter = filter.mid(first, last - first + 1);
 
         // Now, do we still have any wildcard stuff left?
-        if (filter.contains("*") || filter.contains("?"))
+        if (filter.contains("*"))
         {
 //             qDebug() << "W:" << filter;
             // check if we can use RK first (and then check full RE for the rest) for better performance
Index: khtml/khtmlimage.h
===================================================================
--- khtml/khtmlimage.h	(.../tags/KDE/4.5.1/kdelibs)	(wersja 1170564)
+++ khtml/khtmlimage.h	(.../branches/KDE/4.5/kdelibs)	(wersja 1170564)
@@ -23,6 +23,7 @@
 #include "khtml_part.h"
 #include <kparts/factory.h>
 #include <kparts/browserextension.h>
+#include <kparts/statusbarextension.h>
 
 #include "misc/loader_client.h"
 
@@ -96,6 +97,7 @@
 
     QPointer<KHTMLPart> m_khtml;
     KParts::BrowserExtension *m_ext;
+    KParts::StatusBarExtension *m_sbExt;
     QString m_mimeType;
     khtml::CachedImage *m_image;
     int m_xOffset, m_yOffset;
Index: kdoctools/customization/pt/entities/underLGPL.docbook
===================================================================
--- kdoctools/customization/pt/entities/underLGPL.docbook	(.../tags/KDE/4.5.1/kdelibs)	(wersja 0)
+++ kdoctools/customization/pt/entities/underLGPL.docbook	(.../branches/KDE/4.5/kdelibs)	(wersja 1170564)
@@ -0,0 +1,2 @@
+<para>Este programa está licenciado ao abrigo da <ulink
+url="common/lgpl-license.html">GNU Lesser General Public License</ulink>.</para>
Index: kdoctools/customization/pt/lang.entities
===================================================================
--- kdoctools/customization/pt/lang.entities	(.../tags/KDE/4.5.1/kdelibs)	(wersja 1170564)
+++ kdoctools/customization/pt/lang.entities	(.../branches/KDE/4.5/kdelibs)	(wersja 1170564)
@@ -12,6 +12,8 @@
 <!-- Licence links -->
 <!ENTITY underGPL           PUBLIC "-//KDE//DOCUMENT GPL Licence Declaration//PT"
   "entities/underGPL.docbook"                       ><!-- level: para -->
+<!ENTITY underLGPL           PUBLIC "-//KDE//DOCUMENT LGPL Licence Declaration//PT"
+  "entities/underLGPL.docbook"                       ><!-- level: para -->
 <!ENTITY underFDL           PUBLIC "-//KDE//DOCUMENT FDL Licence Declaration//PT"
   "entities/underFDL.docbook"                       ><!-- level: para -->
 <!ENTITY underBSDLicense    PUBLIC "-//KDE//DOCUMENT BSD Licence Declaration//PT"
Index: kdeui/actions/kselectaction.cpp
===================================================================
--- kdeui/actions/kselectaction.cpp	(.../tags/KDE/4.5.1/kdelibs)	(wersja 1170564)
+++ kdeui/actions/kselectaction.cpp	(.../branches/KDE/4.5/kdelibs)	(wersja 1170564)
@@ -242,7 +242,7 @@
   //kDebug (129) << "KSelectAction::addAction(" << action << ")";
 
   action->setActionGroup(selectableActionGroup());
-  
+
   // Re-Enable when an action is added
   setEnabled(true);
 
@@ -311,7 +311,7 @@
 
   menu()->removeAction(action);
 
-  
+
   return action;
 }
 
@@ -530,6 +530,9 @@
     switch (mode) {
     case MenuMode: {
       QToolButton* button = new QToolButton(toolBar);
+      button->setToolTip(toolTip());
+      button->setWhatsThis(whatsThis());
+      button->setStatusTip(statusTip());
       button->setAutoRaise(true);
       button->setFocusPolicy(Qt::NoFocus);
       button->setIconSize(toolBar->iconSize());
@@ -550,11 +553,8 @@
     }
 
     case ComboBoxMode: {
-        KComboBox* comboBox = new KComboBox(parent);
+      KComboBox* comboBox = new KComboBox(parent);
       comboBox->installEventFilter (this);
-      // hack for the fact that QWidgetAction does not sync all its created widgets
-      // to its enabled state, just QToolButtons (Qt 4.4.3)
-      installEventFilter( comboBox );
 
       if ( d->m_maxComboViewCount != -1 )
         comboBox->setMaxVisibleItems( d->m_maxComboViewCount );
@@ -563,6 +563,9 @@
         comboBox->setMaximumWidth( d->m_comboWidth );
 
       comboBox->setEditable(isEditable());
+      comboBox->setToolTip(toolTip());
+      comboBox->setWhatsThis(whatsThis());
+      comboBox->setStatusTip(statusTip());
 
       foreach (QAction* action, selectableActionGroup()->actions())
         comboBox->addAction(action);
@@ -591,6 +594,24 @@
     KAction::deleteWidget(widget);
 }
 
+bool KSelectAction::event(QEvent *event)
+{
+    Q_D(KSelectAction);
+    if (event->type() == QEvent::ActionChanged) {
+        Q_FOREACH(KComboBox* comboBox, d->m_comboBoxes) {
+            comboBox->setToolTip(toolTip());
+            comboBox->setWhatsThis(whatsThis());
+            comboBox->setStatusTip(statusTip());
+        }
+        Q_FOREACH(QToolButton* toolButton, d->m_buttons) {
+            toolButton->setToolTip(toolTip());
+            toolButton->setWhatsThis(whatsThis());
+            toolButton->setStatusTip(statusTip());
+        }
+    }
+    return KAction::event(event);
+}
+
 // KSelectAction::eventFilter() is called before action->setChecked()
 // invokes the signal to update QActionGroup so KSelectAction::currentItem()
 // returns an old value.  There are 3 possibilities, where n actions will
@@ -630,6 +651,7 @@
 
 // A plain "QVariant (action)" results in a bool being stored.  So all
 // QAction pointers become stored as "true".  This hacks around it.
+// TODO this is bogus, just use Q_DECLARE_METATYPE and qVariantFromValue(action)
 static QVariant QVariantFromQAction (QAction *action)
 {
     // "(void *)" or "long" would be smaller than "qlonglong"
Index: kdeui/actions/kselectaction.h
===================================================================
--- kdeui/actions/kselectaction.h	(.../tags/KDE/4.5.1/kdelibs)	(wersja 1170564)
+++ kdeui/actions/kselectaction.h	(.../branches/KDE/4.5/kdelibs)	(wersja 1170564)
@@ -321,7 +321,7 @@
 
 Q_SIGNALS:
     /**
-     * This signal is emitted when an item is selected; @param action 
+     * This signal is emitted when an item is selected; @param action
      * indicates the item selected.
      */
     void triggered( QAction* action );
@@ -360,6 +360,8 @@
      */
     virtual void deleteWidget(QWidget *widget);
 
+    virtual bool event(QEvent *event);
+
     virtual bool eventFilter (QObject *watched, QEvent *event);
 
     /**
Index: kdeui/tests/kselectaction_unittest.h
===================================================================
--- kdeui/tests/kselectaction_unittest.h	(.../tags/KDE/4.5.1/kdelibs)	(wersja 0)
+++ kdeui/tests/kselectaction_unittest.h	(.../branches/KDE/4.5/kdelibs)	(wersja 1170564)
@@ -0,0 +1,43 @@
+/* This file is part of the KDE libraries
+    Copyright (c) 2009 Daniel Calviño Sánchez <danxuliu@gmail.com>
+
+    This library is free software; you can redistribute it and/or
+    modify it under the terms of the GNU Library General Public
+    License as published by the Free Software Foundation; either
+    version 2 of the License, or (at your option) any later version.
+
+    This library is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+    Library General Public License for more details.
+
+    You should have received a copy of the GNU Library General Public License
+    along with this library; see the file COPYING.LIB.  If not, write to
+    the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
+    Boston, MA 02110-1301, USA.
+*/
+
+#ifndef KSELECTACTION_UNITTEST_H
+#define KSELECTACTION_UNITTEST_H
+
+#include <QtCore/QObject>
+
+class KSelectAction_UnitTest : public QObject
+{
+    Q_OBJECT
+
+private Q_SLOTS:
+
+    void testSetToolTipBeforeRequestingComboBoxWidget();
+    void testSetToolTipAfterRequestingComboBoxWidget();
+    void testSetToolTipBeforeRequestingToolButtonWidget();
+    void testSetToolTipAfterRequestingToolButtonWidget();
+    
+    void testSetWhatsThisBeforeRequestingComboBoxWidget();
+    void testSetWhatsThisAfterRequestingComboBoxWidget();
+    void testSetWhatsThisBeforeRequestingToolButtonWidget();
+    void testSetWhatsThisAfterRequestingToolButtonWidget();
+
+};
+
+#endif
Index: kdeui/tests/kselectaction_unittest.cpp
===================================================================
--- kdeui/tests/kselectaction_unittest.cpp	(.../tags/KDE/4.5.1/kdelibs)	(wersja 0)
+++ kdeui/tests/kselectaction_unittest.cpp	(.../branches/KDE/4.5/kdelibs)	(wersja 1170564)
@@ -0,0 +1,175 @@
+/* This file is part of the KDE libraries
+    Copyright (c) 2009 Daniel Calviño Sánchez <danxuliu@gmail.com>
+
+    This library is free software; you can redistribute it and/or
+    modify it under the terms of the GNU Library General Public
+    License as published by the Free Software Foundation; either
+    version 2 of the License, or (at your option) any later version.
+
+    This library is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+    Library General Public License for more details.
+
+    You should have received a copy of the GNU Library General Public License
+    along with this library; see the file COPYING.LIB.  If not, write to
+    the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
+    Boston, MA 02110-1301, USA.
+*/
+
+#include "kselectaction_unittest.h"
+#include "kselectaction_unittest.moc"
+#include "qtest_kde.h"
+#include <kselectaction.h>
+#include <kcombobox.h>
+#include <qtoolbar.h>
+
+QTEST_KDEMAIN( KSelectAction_UnitTest, GUI )
+
+void KSelectAction_UnitTest::testSetToolTipBeforeRequestingComboBoxWidget()
+{
+    KSelectAction selectAction("selectAction", 0);
+    selectAction.setToolBarMode(KSelectAction::ComboBoxMode);
+    selectAction.setToolTip("Test");
+    selectAction.setEnabled(false); // also test disabling the action
+
+    QWidget parent;
+    QWidget* widget = selectAction.requestWidget(&parent);
+
+    QVERIFY(widget);
+    KComboBox* comboBox = qobject_cast<KComboBox*>(widget);
+    QVERIFY(comboBox);
+    QCOMPARE(comboBox->toolTip(), QString("Test"));
+    QCOMPARE(comboBox->isEnabled(), false);
+}
+
+void KSelectAction_UnitTest::testSetToolTipAfterRequestingComboBoxWidget()
+{
+    KSelectAction selectAction("selectAction", 0);
+    selectAction.setToolBarMode(KSelectAction::ComboBoxMode);
+
+    QWidget parent;
+    QWidget* widget = selectAction.requestWidget(&parent);
+
+    selectAction.setToolTip("Test");
+    selectAction.setEnabled(false); // also test disabling the action
+
+    QVERIFY(widget);
+    KComboBox* comboBox = qobject_cast<KComboBox*>(widget);
+    QVERIFY(comboBox);
+    QCOMPARE(comboBox->toolTip(), QString("Test"));
+    QCOMPARE(comboBox->isEnabled(), false);
+}
+
+void KSelectAction_UnitTest::testSetToolTipBeforeRequestingToolButtonWidget()
+{
+    KSelectAction selectAction("selectAction", 0);
+    selectAction.setToolBarMode(KSelectAction::MenuMode);
+    selectAction.setToolTip("Test");
+
+    QToolBar toolBar;
+    //Don't use requestWidget, as it needs a releaseWidget when used in MenuMode
+    //(in ComboBoxMode the widget is released automatically when it is
+    //destroyed). When the action is added to the QToolBar, it requests and
+    //releases the widget as needed.
+    toolBar.addAction(&selectAction);
+    QWidget* widget = toolBar.widgetForAction(&selectAction);
+
+    QVERIFY(widget);
+    QToolButton* toolButton = qobject_cast<QToolButton*>(widget);
+    QVERIFY(toolButton);
+    QCOMPARE(toolButton->toolTip(), QString("Test"));
+}
+
+void KSelectAction_UnitTest::testSetToolTipAfterRequestingToolButtonWidget()
+{
+    KSelectAction selectAction("selectAction", 0);
+    selectAction.setToolBarMode(KSelectAction::MenuMode);
+
+    QToolBar toolBar;
+    //Don't use requestWidget, as it needs a releaseWidget when used in MenuMode
+    //(in ComboBoxMode the widget is released automatically when it is
+    //destroyed). When the action is added to the QToolBar, it requests and
+    //releases the widget as needed.
+    toolBar.addAction(&selectAction);
+    QWidget* widget = toolBar.widgetForAction(&selectAction);
+
+    selectAction.setToolTip("Test");
+
+    QVERIFY(widget);
+    QToolButton* toolButton = qobject_cast<QToolButton*>(widget);
+    QVERIFY(toolButton);
+    QCOMPARE(toolButton->toolTip(), QString("Test"));
+}
+
+void KSelectAction_UnitTest::testSetWhatsThisBeforeRequestingComboBoxWidget()
+{
+    KSelectAction selectAction("selectAction", 0);
+    selectAction.setToolBarMode(KSelectAction::ComboBoxMode);
+    selectAction.setWhatsThis("Test");
+
+    QWidget parent;
+    QWidget* widget = selectAction.requestWidget(&parent);
+
+    QVERIFY(widget);
+    KComboBox* comboBox = qobject_cast<KComboBox*>(widget);
+    QVERIFY(comboBox);
+    QCOMPARE(comboBox->whatsThis(), QString("Test"));
+}
+
+void KSelectAction_UnitTest::testSetWhatsThisAfterRequestingComboBoxWidget()
+{
+    KSelectAction selectAction("selectAction", 0);
+    selectAction.setToolBarMode(KSelectAction::ComboBoxMode);
+
+    QWidget parent;
+    QWidget* widget = selectAction.requestWidget(&parent);
+
+    selectAction.setWhatsThis("Test");
+
+    QVERIFY(widget);
+    KComboBox* comboBox = qobject_cast<KComboBox*>(widget);
+    QVERIFY(comboBox);
+    QCOMPARE(comboBox->whatsThis(), QString("Test"));
+}
+
+void KSelectAction_UnitTest::testSetWhatsThisBeforeRequestingToolButtonWidget()
+{
+    KSelectAction selectAction("selectAction", 0);
+    selectAction.setToolBarMode(KSelectAction::MenuMode);
+    selectAction.setWhatsThis("Test");
+
+    QToolBar toolBar;
+    //Don't use requestWidget, as it needs a releaseWidget when used in MenuMode
+    //(in ComboBoxMode the widget is released automatically when it is
+    //destroyed). When the action is added to the QToolBar, it requests and
+    //releases the widget as needed.
+    toolBar.addAction(&selectAction);
+    QWidget* widget = toolBar.widgetForAction(&selectAction);
+
+    QVERIFY(widget);
+    QToolButton* toolButton = qobject_cast<QToolButton*>(widget);
+    QVERIFY(toolButton);
+    QCOMPARE(toolButton->whatsThis(), QString("Test"));
+}
+
+void KSelectAction_UnitTest::testSetWhatsThisAfterRequestingToolButtonWidget()
+{
+    KSelectAction selectAction("selectAction", 0);
+    selectAction.setToolBarMode(KSelectAction::MenuMode);
+
+    QToolBar toolBar;
+    //Don't use requestWidget, as it needs a releaseWidget when used in MenuMode
+    //(in ComboBoxMode the widget is released automatically when it is
+    //destroyed). When the action is added to the QToolBar, it requests and
+    //releases the widget as needed.
+    toolBar.addAction(&selectAction);
+    QWidget* widget = toolBar.widgetForAction(&selectAction);
+
+    selectAction.setWhatsThis("Test");
+
+    QVERIFY(widget);
+    QToolButton* toolButton = qobject_cast<QToolButton*>(widget);
+    QVERIFY(toolButton);
+    QCOMPARE(toolButton->whatsThis(), QString("Test"));
+}
Index: kdeui/tests/CMakeLists.txt
===================================================================
--- kdeui/tests/CMakeLists.txt	(.../tags/KDE/4.5.1/kdelibs)	(wersja 1170564)
+++ kdeui/tests/CMakeLists.txt	(.../branches/KDE/4.5/kdelibs)	(wersja 1170564)
@@ -65,6 +65,7 @@
   ktabwidget_unittest
   ktoolbar_unittest
   krichtextedittest
+  kselectaction_unittest
 )
 
 KDEUI_PROXYMODEL_TESTS(
Index: kdeui/widgets/kcombobox.cpp
===================================================================
--- kdeui/widgets/kcombobox.cpp	(.../tags/KDE/4.5.1/kdelibs)	(wersja 1170564)
+++ kdeui/widgets/kcombobox.cpp	(.../branches/KDE/4.5/kdelibs)	(wersja 1170564)
@@ -175,17 +175,9 @@
         d->klineEdit->rotateText( type );
 }
 
+// Not needed anymore
 bool KComboBox::eventFilter( QObject* o, QEvent* ev )
 {
-    // hack for the fact that QWidgetAction does not sync all its created widgets
-    // to its enabled state, just QToolButtons (Qt 4.4.3)
-    if( ev->type() == QEvent::ActionChanged )
-    {
-        KSelectAction* selectAction = qobject_cast<KSelectAction*>( o );
-        if ( selectAction )
-            setEnabled( selectAction->isEnabled() );
-    }
-
     return QComboBox::eventFilter( o, ev );
 }
 

Zmiany atrybutów dla: .
___________________________________________________________________
Dodane: svn:externals
   + 


